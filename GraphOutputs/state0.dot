digraph umlMetamodel {
	"Invoicer" -> "Package" [label="i", color="lightgrey"]
	"Invoicer" -> "Invoicer" [label="packagedElement", color="grey"]
	"Invoicer" -> "Class" [label="i", color="lightgrey"]
	"Invoicer" -> "StateMachine" [label="classifierBehavior", color="grey"]
	"Invoicer" -> "StateMachine" [label="ownedBehavior", color="grey"]
	"StateMachine" -> "StateMachine" [label="i", color="lightgrey"]
	"StateMachine" -> "Region" [label="region", color="grey"]
	"Region" -> "Region" [label="i", color="lightgrey"]
	"Region" -> "State1" [label="subvertex", color="grey"]
	"State1" -> "State" [label="i", color="lightgrey"]
	"Region" -> "Initial" [label="subvertex", color="grey"]
	"Initial" -> "State" [label="i", color="lightgrey"]
	"Region" -> "Pseudos Init" [label="subvertex", color="grey"]
	"Pseudos Init" -> "Pseudostate" [label="i", color="lightgrey"]
	"Region" -> "Invoicing" [label="subvertex", color="grey"]
	"Invoicing" -> "State" [label="i", color="lightgrey"]
	"Region" -> "Pseudo Teminate" [label="subvertex", color="grey"]
	"Pseudo Teminate" -> "Pseudostate" [label="i", color="lightgrey"]
	"Pseudo Teminate" -> "terminate" [label="kind", color="grey"]
	"Region" -> "Pseudo Exit" [label="subvertex", color="grey"]
	"Pseudo Exit" -> "Pseudostate" [label="i", color="lightgrey"]
	"Pseudo Exit" -> "exitPoint" [label="kind", color="grey"]
	"Region" -> "initialTrans" [label="transition", color="grey"]
	"initialTrans" -> "Transition" [label="i", color="lightgrey"]
	"initialTrans" -> "Pseudos Init" [label="source", color="grey"]
	"initialTrans" -> "Initial" [label="target", color="grey"]
	"Region" -> "InvoiceTrans" [label="transition", color="grey"]
	"InvoiceTrans" -> "Transition" [label="i", color="lightgrey"]
	"InvoiceTrans" -> "Initial" [label="source", color="grey"]
	"InvoiceTrans" -> "Invoicing" [label="target", color="grey"]
	"InvoiceTrans" -> "TriggerInvoice" [label="trigger", color="grey"]
	"TriggerInvoice" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerInvoice" -> "Invoice" [label="event", color="grey"]
	"Region" -> "DoTrans1" [label="transition", color="grey"]
	"DoTrans1" -> "Transition" [label="i", color="lightgrey"]
	"DoTrans1" -> "Invoicing" [label="source", color="grey"]
	"DoTrans1" -> "Initial" [label="target", color="grey"]
	"DoTrans1" -> "TriggerDo1" [label="trigger", color="grey"]
	"TriggerDo1" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerDo1" -> "Do" [label="event", color="grey"]
	"Region" -> "StopTrans1" [label="transition", color="grey"]
	"StopTrans1" -> "Transition" [label="i", color="lightgrey"]
	"StopTrans1" -> "Initial" [label="source", color="grey"]
	"StopTrans1" -> "Pseudo Teminate" [label="target", color="grey"]
	"StopTrans1" -> "TriggerStop1" [label="trigger", color="grey"]
	"TriggerStop1" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerStop1" -> "Stop" [label="event", color="grey"]
	"Region" -> "StopTrans2" [label="transition", color="grey"]
	"StopTrans2" -> "Transition" [label="i", color="lightgrey"]
	"StopTrans2" -> "Invoicing" [label="source", color="grey"]
	"StopTrans2" -> "Pseudo Teminate" [label="target", color="grey"]
	"StopTrans2" -> "TriggerStop2" [label="trigger", color="grey"]
	"TriggerStop2" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerStop2" -> "Stop" [label="event", color="grey"]
	"Region" -> "DoTrans2" [label="transition", color="grey"]
	"DoTrans2" -> "Transition" [label="i", color="lightgrey"]
	"DoTrans2" -> "Invoicing" [label="source", color="grey"]
	"DoTrans2" -> "Invoicing" [label="target", color="grey"]
	"DoTrans2" -> "TriggerDo2" [label="trigger", color="grey"]
	"TriggerDo2" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerDo2" -> "Do" [label="event", color="grey"]
	"Region" -> "StopTrans3" [label="transition", color="grey"]
	"StopTrans3" -> "Transition" [label="i", color="lightgrey"]
	"StopTrans3" -> "Initial" [label="source", color="grey"]
	"StopTrans3" -> "Pseudo Exit" [label="target", color="grey"]
	"StopTrans3" -> "TriggerStop3" [label="trigger", color="grey"]
	"TriggerStop3" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerStop3" -> "Stop" [label="event", color="grey"]
	"Region" -> "StopTrans4" [label="transition", color="grey"]
	"StopTrans4" -> "Transition" [label="i", color="lightgrey"]
	"StopTrans4" -> "Invoicing" [label="source", color="grey"]
	"StopTrans4" -> "Pseudo Exit" [label="target", color="grey"]
	"StopTrans4" -> "TriggerStop4" [label="trigger", color="grey"]
	"TriggerStop4" -> "Trigger" [label="i", color="lightgrey"]
	"TriggerStop4" -> "Stop" [label="event", color="grey"]
	"Invoicer" -> "Do" [label="packagedElement", color="grey"]
	"Do" -> "ReceiveSignalEvent" [label="i", color="lightgrey"]
	"Do" -> "sigDo1" [label="signal", color="grey"]
	"Invoicer" -> "sigDo1" [label="packagedElement", color="grey"]
	"sigDo1" -> "Signal" [label="i", color="lightgrey"]
	"Invoicer" -> "Stop" [label="packagedElement", color="grey"]
	"Stop" -> "ReceiveSignalEvent" [label="i", color="lightgrey"]
	"Stop" -> "sigStop1" [label="signal", color="grey"]
	"Invoicer" -> "sigStop1" [label="packagedElement", color="grey"]
	"sigStop1" -> "Signal" [label="i", color="lightgrey"]
	"Invoicer" -> "Invoice" [label="packagedElement", color="grey"]
	"Invoice" -> "ReceiveSignalEvent" [label="i", color="lightgrey"]
	"Invoice" -> "SigInvoice" [label="signal", color="grey"]
	"Invoicer" -> "SigInvoice" [label="packagedElement", color="grey"]
	"SigInvoice" -> "Signal" [label="i", color="lightgrey"]
	"i1" -> "Invoicer" [label="i", color="lightgrey"]
	"i1classifierBehaviorExecution" -> "BehaviorExecution" [label="i", color="lightgrey"]
	"i1" -> "i1classifierBehaviorExecution" [label="execution", color="grey"]
	"i1classifierBehaviorExecution" -> "i1" [label="host", color="grey"]
	"i1classifierBehaviorExecution" -> "StateMachine" [label="behavior", color="grey"]
	"i1classifierBehaviorExecution" -> "Invoice" [label="activeState", color="grey"]
	"a1" -> "Actor" [label="i", color="lightgrey"]
	"a1behaviorExecution" -> "BehaviorExecution" [label="i", color="lightgrey"]
	"a1" -> "a1behaviorExecution" [label="execution", color="grey"]
	"a1behaviorExecution" -> "a1" [label="host", color="grey"]
}
