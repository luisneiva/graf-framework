digraph umlMetamodel {
	"DefaultNamePackage" -> "Package" [label="i", color="lightgrey"]
	"DefaultNamePackage" -> "Elevator" [label="packagedElement", color="grey"]
	"Elevator" -> "Class" [label="i", color="lightgrey"]
	"Elevator" -> "idStateMachine" [label="classifierBehavior", color="grey"]
	"Elevator" -> "DefaultNameStateMachine" [label="ownedBehavior", color="grey"]
	"DefaultNameStateMachine" -> "StateMachine" [label="i", color="lightgrey"]
	"DefaultNameStateMachine" -> "MainRegion" [label="region", color="grey"]
	"MainRegion" -> "Region" [label="i", color="lightgrey"]
	"MainRegion" -> "4" [label="subvertex", color="grey"]
	"4" -> "State" [label="i", color="lightgrey"]
	"MainRegion" -> "5" [label="subvertex", color="grey"]
	"5" -> "State" [label="i", color="lightgrey"]
	"MainRegion" -> "8" [label="subvertex", color="grey"]
	"8" -> "State" [label="i", color="lightgrey"]
	"MainRegion" -> "7" [label="subvertex", color="grey"]
	"7" -> "State" [label="i", color="lightgrey"]
	"MainRegion" -> "6" [label="subvertex", color="grey"]
	"6" -> "State" [label="i", color="lightgrey"]
	"MainRegion" -> "3" [label="subvertex", color="grey"]
	"3" -> "Pseudostate" [label="i", color="lightgrey"]
	"MainRegion" -> "transition_HFI" [label="transition", color="grey"]
	"transition_HFI" -> "Transition" [label="i", color="lightgrey"]
	"transition_HFI" -> "local" [label="kind", color="grey"]
	"transition_HFI" -> "3" [label="source", color="grey"]
	"transition_HFI" -> "4" [label="target", color="grey"]
	"MainRegion" -> "start" [label="transition", color="grey"]
	"start" -> "Transition" [label="i", color="lightgrey"]
	"start" -> "local" [label="kind", color="grey"]
	"start" -> "4" [label="source", color="grey"]
	"start" -> "5" [label="target", color="grey"]
	"MainRegion" -> "closeDoor" [label="transition", color="grey"]
	"closeDoor" -> "Transition" [label="i", color="lightgrey"]
	"closeDoor" -> "local" [label="kind", color="grey"]
	"closeDoor" -> "5" [label="source", color="grey"]
	"closeDoor" -> "6" [label="target", color="grey"]
	"MainRegion" -> "up" [label="transition", color="grey"]
	"up" -> "Transition" [label="i", color="lightgrey"]
	"up" -> "local" [label="kind", color="grey"]
	"up" -> "6" [label="source", color="grey"]
	"up" -> "7" [label="target", color="grey"]
	"MainRegion" -> "down" [label="transition", color="grey"]
	"down" -> "Transition" [label="i", color="lightgrey"]
	"down" -> "local" [label="kind", color="grey"]
	"down" -> "6" [label="source", color="grey"]
	"down" -> "7" [label="target", color="grey"]
	"MainRegion" -> "passed" [label="transition", color="grey"]
	"passed" -> "Transition" [label="i", color="lightgrey"]
	"passed" -> "local" [label="kind", color="grey"]
	"passed" -> "7" [label="source", color="grey"]
	"passed" -> "7" [label="target", color="grey"]
	"MainRegion" -> "stop" [label="transition", color="grey"]
	"stop" -> "Transition" [label="i", color="lightgrey"]
	"stop" -> "local" [label="kind", color="grey"]
	"stop" -> "7" [label="source", color="grey"]
	"stop" -> "8" [label="target", color="grey"]
	"MainRegion" -> "openDoor" [label="transition", color="grey"]
	"openDoor" -> "Transition" [label="i", color="lightgrey"]
	"openDoor" -> "local" [label="kind", color="grey"]
	"openDoor" -> "8" [label="source", color="grey"]
	"openDoor" -> "4" [label="target", color="grey"]
	"E1" -> "Elevator" [label="i", color="lightgrey"]
	"E1" -> "o1" [label="o", color="grey"]
	"E1classifierBehaviorExecution" -> "BehaviorExecution" [label="i", color="lightgrey"]
	"E1" -> "E1classifierBehaviorExecution" [label="execution", color="grey"]
	"E1classifierBehaviorExecution" -> "E1" [label="host", color="grey"]
	"E1classifierBehaviorExecution" -> "idStateMachine" [label="behavior", color="grey"]
	"E1classifierBehaviorExecution" -> "Initial" [label="activeState", color="grey"]
	"actor1" -> "Actor" [label="i", color="lightgrey"]
	"actor1behaviorExecution" -> "BehaviorExecution" [label="i", color="lightgrey"]
	"actor1" -> "actor1behaviorExecution" [label="execution", color="grey"]
	"actor1behaviorExecution" -> "actor1" [label="host", color="grey"]
}
