#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// model.Edge
	c32 [label=<<table title="model.Edge" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Edge.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Edge </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - to : Node </td></tr>
<tr><td align="left" balign="left"> - from : Node </td></tr>
<tr><td align="left" balign="left"> - label : String </td></tr>
<tr><td align="left" balign="left"> - toName : String </td></tr>
<tr><td align="left" balign="left"> - fromName : String </td></tr>
<tr><td align="left" balign="left"> + toIsVariable : Boolean </td></tr>
<tr><td align="left" balign="left"> + fromIsVariable : Boolean </td></tr>
<tr><td align="left" balign="left"> + edgeIsVariable : Boolean </td></tr>
<tr><td align="left" balign="left"> + checked : Boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + equals(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + applyPatternMatch(pattern : PatternMatch) </td></tr>
<tr><td align="left" balign="left"> + getTo() : Node </td></tr>
<tr><td align="left" balign="left"> + getFrom() : Node </td></tr>
<tr><td align="left" balign="left"> + getLabel() : String </td></tr>
<tr><td align="left" balign="left"> + getToName() : String </td></tr>
<tr><td align="left" balign="left"> + getFromName() : String </td></tr>
<tr><td align="left" balign="left"> + setToName(toName : String) </td></tr>
<tr><td align="left" balign="left"> + setFromName(fromName : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.Graph
	c33 [label=<<table title="model.Graph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Graph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Graph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - objects : ArrayList&lt;ODObject&gt; </td></tr>
<tr><td align="left" balign="left"> - associations : ArrayList&lt;ODLink&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getODObjects() : ArrayList&lt;ODObject&gt; </td></tr>
<tr><td align="left" balign="left"> + getODLinks() : ArrayList&lt;ODLink&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + containsVariableNodes() : Boolean </td></tr>
<tr><td align="left" balign="left"> + replaceNode(target : String, replacement : String) </td></tr>
<tr><td align="left" balign="left"> + resetCheck() </td></tr>
<tr><td align="left" balign="left"> + getNodeWithName(name : String) : Node </td></tr>
<tr><td align="left" balign="left"> + addIEdge(from : String, to : String) </td></tr>
<tr><td align="left" balign="left"> + addEdge(from : String, label : String, to : String) </td></tr>
<tr><td align="left" balign="left"> + applyPatternMatch(pattern : PatternMatch) </td></tr>
<tr><td align="left" balign="left"> + numberOfVariables() : Integer </td></tr>
<tr><td align="left" balign="left"> + dealg() : Graph </td></tr>
<tr><td align="left" balign="left"> + realg() : Graph </td></tr>
<tr><td align="left" balign="left"> + containsVariableEdges() : Boolean </td></tr>
<tr><td align="left" balign="left"> + outputdot(name : String) </td></tr>
<tr><td align="left" balign="left"> + generateObjectDiagram() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.Node
	c34 [label=<<table title="model.Node" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Node.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - edgesFrom : ArrayList&lt;Edge&gt; </td></tr>
<tr><td align="left" balign="left"> - edgesTo : ArrayList&lt;Edge&gt; </td></tr>
<tr><td align="left" balign="left"> - variable : Boolean </td></tr>
<tr><td align="left" balign="left"> - checked : Boolean </td></tr>
<tr><td align="left" balign="left"> - certainty : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getFrom() : ArrayList&lt;Edge&gt; </td></tr>
<tr><td align="left" balign="left"> + getTo() : ArrayList&lt;Edge&gt; </td></tr>
<tr><td align="left" balign="left"> + variable() : Boolean </td></tr>
<tr><td align="left" balign="left"> + replace(target : String, replacement : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + calculateCertainty() </td></tr>
<tr><td align="left" balign="left"> + getCertainty() : Integer </td></tr>
<tr><td align="left" balign="left"> + resetCertainty() </td></tr>
<tr><td align="left" balign="left"> + getSize() : Integer </td></tr>
<tr><td align="left" balign="left"> + check() </td></tr>
<tr><td align="left" balign="left"> + getChecked() : Boolean </td></tr>
<tr><td align="left" balign="left"> + resetCheck() </td></tr>
<tr><td align="left" balign="left"> + deleteNodeReferences(deleteNodes : ArrayList&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + toTrace(edgeNames : ArrayList&lt;String&gt;) : ArrayList&lt;Node&gt; </td></tr>
<tr><td align="left" balign="left"> + fromTrace(edgeNames : ArrayList&lt;String&gt;) : ArrayList&lt;Node&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.PluginModel
	c35 [label=<<table title="model.PluginModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PluginModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PluginModel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - umltograph : UMLToGraph </td></tr>
<tr><td align="left" balign="left"> - graphTransformer : GraphTransformer </td></tr>
<tr><td align="left" balign="left"> - graph : Graph </td></tr>
<tr><td align="left" balign="left"> - odObjs : ArrayList&lt;ODObject&gt; </td></tr>
<tr><td align="left" balign="left"> - odLinks : ArrayList&lt;ODLink&gt; </td></tr>
<tr><td align="left" balign="left"> - metamodelURL : URL </td></tr>
<tr><td align="left" balign="left"> - graphOutputsPath : String </td></tr>
<tr><td align="left" balign="left"> - debugmode : boolean </td></tr>
<tr><td align="left" balign="left"> - transitionnumber : Integer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getODObjects() : ArrayList&lt;ODObject&gt; </td></tr>
<tr><td align="left" balign="left"> + getODLinks() : ArrayList&lt;ODLink&gt; </td></tr>
<tr><td align="left" balign="left"> + buildGraph(modelURL : URL, instanceURL : URL) </td></tr>
<tr><td align="left" balign="left"> + transition() </td></tr>
<tr><td align="left" balign="left"> - constructObjDiag() </td></tr>
<tr><td align="left" balign="left"> - setUpMicrowave(graph : Graph) </td></tr>
<tr><td align="left" balign="left"> - outputdot() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.UMLToGraph
	c36 [label=<<table title="model.UMLToGraph" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UMLToGraph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UMLToGraph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - metamodelroot : Element </td></tr>
<tr><td align="left" balign="left"> - metamodelxpathctx : XPathContext </td></tr>
<tr><td align="left" balign="left"> - xpathctx : XPathContext </td></tr>
<tr><td align="left" balign="left"> - graph : Graph </td></tr>
<tr><td align="left" balign="left"> - metamodelHashmap : HashMap&lt;String, Nodes&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + buildGraph(modelURL : URL, instanceURL : URL) : Graph </td></tr>
<tr><td align="left" balign="left"> - translateModelPart(modelURL : URL) </td></tr>
<tr><td align="left" balign="left"> - buildedgetree(root : Element) </td></tr>
<tr><td align="left" balign="left"> - translateInstancePart(instanceURL : URL) </td></tr>
<tr><td align="left" balign="left"> - graphNodeName(node : Element) : String </td></tr>
<tr><td align="left" balign="left"> - createRuntimePart() </td></tr>
<tr><td align="left" balign="left"> - instanceErr(msg : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.UMLToGraphTest
	c58 [label=<<table title="model.UMLToGraphTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UMLToGraphTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UMLToGraphTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ metamodelPath : String </td></tr>
<tr><td align="left" balign="left"> ~ modelPath : String </td></tr>
<tr><td align="left" balign="left"> ~ instancePath : String </td></tr>
<tr><td align="left" balign="left"> ~ graph : Graph </td></tr>
<tr><td align="left" balign="left"> ~ testGraph : Graph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setup() </td></tr>
<tr><td align="left" balign="left"> + testBuildGraph() </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

