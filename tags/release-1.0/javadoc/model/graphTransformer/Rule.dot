#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// model.graphTransformer.Rule
	c1327 [label=<<table title="model.graphTransformer.Rule" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Rule.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Rule </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - before : Graph </td></tr>
<tr><td align="left" balign="left"> - after : Graph </td></tr>
<tr><td align="left" balign="left"> - forbidden : Graph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + subgraph(input : Graph) : Boolean </td></tr>
<tr><td align="left" balign="left"> - checkForbiddenEdges(input : Graph) : Boolean </td></tr>
<tr><td align="left" balign="left"> + transform(input : Graph) </td></tr>
<tr><td align="left" balign="left"> + findPatternMatch(input : Graph, ignoreMatch : PatternMatch) : PatternMatch </td></tr>
<tr><td align="left" balign="left"> - findSuspiciousPairs(input : Graph) : PatternMatch </td></tr>
<tr><td align="left" balign="left"> - sortPairs(list : PatternMatch) </td></tr>
<tr><td align="left" balign="left"> - compareEdges(input : Graph) : Boolean </td></tr>
<tr><td align="left" balign="left"> + findAllPatternMatches(input : Graph) : ArrayList&lt;PatternMatch&gt; </td></tr>
<tr><td align="left" balign="left"> + dealg() </td></tr>
<tr><td align="left" balign="left"> + realg() </td></tr>
<tr><td align="left" balign="left"> + applyPatternMatch(pattern : PatternMatch) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

