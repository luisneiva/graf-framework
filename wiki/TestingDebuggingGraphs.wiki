#labels Phase-QA
Graph outputs can be used for debugging and testing implementations. A graph output requires _AGG_ package, _Graphviz_, and the bat script called dotToImg2.dot.
  * _AGG_ package can be found under agg_V164 directory.
  * The bat script is stored in graphOutputs/conversionFiles. To run it, type the command: dotToImg2 stateX.dot

Note: stateX.dot stands is the dot file generated by GRAF, stored in the graphOutputs folder.

Background:
GRAF supports regions and multiple regions. The Elevator model contains state machine regions. GRAF can display multiple states in one object.

The Active-State edge appears in the graph when taking into account regions:
http://graf-framework.googlecode.com/files/regions%20output%20graph.jpg

Nodes 1,2,3,4 etc are the nodes for states. In a modeltest file, {state1;state2} means an object can be in both state1 and state2.
Code changes: We changed the code in the Graph-To-Obj-Diag class (under the package model/modelTransformer). This class is intended to read a graph and transfer a graph into an object diagram. 
  * First, in order to find Top-Region node, use List-Graph.toTrace to trace from elevator1 to Top-Region following ‘execution’ edge, ‘behaviour’ edge, and ‘region’ edge (as marked in blue). This sequence suits all models in GRAF.
  * Second, trace to all sub-regions when there exist multiple regions by following the ‘subvertex’ and ‘region’ edges. In this example, it will find Elevator-Region and Elevator2-Region (as marked in pink). Then, GRAF will display both states in one object.