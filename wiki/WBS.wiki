#summary WBS

= Work Breakdown Structure =

The original WBS is [http://svn.anu.edu.au/SE_projects/GRAF/Admin/wbs.xls here] on SVN. It contains 2 tables, one with just the WBS and one with the WBS and time estimates for tasks not finished. This page contains copies of each of those tables.

===WBS===
http://graf-framework.googlecode.com/files/wbs28-10-10.jpg

Crossed out tasks are finished

====WBS including time estimates====
http://graf-framework.googlecode.com/files/wbs-28-10-10+times.jpg

=== Basis of estimates ===
Estimated times are based on times logged in GPME including  times from completed tasks and data from last year and _ball-park_ guesses. 

<br>
====The detail below is old====
<br>
<br>
<br>
====Plan to end of semester====
[http://svn.anu.edu.au/SE_projects/GRAF/Admin/gantt.xls On SVN]

== PERT Diagram ==
http://graf-framework.googlecode.com/files/pert29-5-10.jpg

=== Notes ===
This PERT diagram is based on the second lowest level of the WBS. This diagram is unusal because its times are in hours not days, and certainly not working days. It's impossible to get an accurate PERT diagram for the project because no one is working full time on it.

This diagram suggests that the 91 hours of work in the WBS can be cut down to 55 hours. Both these values are obviously ridiculous underestimates.

This diagram is also deficient in that it lacks adequate information on paralleling tasks. Although no more than 4 tasks have to happen at once, certain skills are needed for certain tasks which may make the implied concurrency impossible.

Some things that are not dependent on the diagram might be (eg. Multiple state machine defect).

Some things that are dependent on the diagram (eg. Find other UML tools -> RCA01/AR02) are not dependent. Making a PERT diagram for the next level of detail of the WBS could solve this problem.

The one useful thing this diagram does is suggest the critical path of Find other UML tools -> RCA01/AR02 -> Add models to other animators. Although these activities can largely be done concurrently, it does single out RCA01/AR02 as the most challenging task.