== Installation ==

Install [http://www.visual-paradigm.com/download/sdeec.jsp?edition=ce Visual Paradigm Community Edition SDE for Eclipse]. A user guide is [http://www.visual-paradigm.com/support/documents/sdejavauserguide.jsp provided].  

Once this is completed install [http://www.topcased.org/ Topcased] from the org.topcased.sdk-3.3.0.zip (a little bit under 30megs) by dragging and dropping the extracted files into the Eclipse plugins directory. 

== Usage ==

There are 2 basic steps to adding models to GRAF:
  # Creating the model
  # Editing the models .uml file so that the architecture behind the transitions is recognised 

=== 1. How to create a new model ===

In Eclipse,
  * File
  * New
  * Project
  * Expand Topcased
  * Select Topcased Project
  * Expand project in project explorer, models folder should appear
  * Right click the models folder
  * New
  * Select UML model with TOPCASED
  * Name the new model
  * Open the .umldi file (graphical representation)
  * Common operations include:
    * To add classes click the class icon and then click the blank space to create a class. To rename the class by editing its name property - should be in the properties section on the right hand side of the screen. If this isnt there check you are in the Unimod perspective (top right of the screen)
    * To add a state machine double click on the class you want to build one for. A dialog box will appear. Select State Machine Diagram and click ok
    * When adding transitions use the 'External Transition' option - this is essential for your model to work within GRAF. Transitions are added by clicking on the 'from' class and dragging to the 'to' class. The lines can be edited to make the diagram more attractive by clicking on a point on the line and dragging that point on the line to wherever you see fit. Each transition should have a unique name (e.g. if there are two 'Door Closed' transitions name one doorClosed1 and the other doorClosed2
     http://graf-framework.googlecode.com/files/TransitionChoices.png

==== Example ====

The State Machine for the Simple Microwave, based on Shayne Flints lecture notes looks like this:

http://graf-framework.googlecode.com/files/MicrowaveSimpleStateMachine.png

=== 2. Editing the .uml file to make it work with GRAF ===

*How to create .uml models to work in GRAF using Topcased in Eclipse*
  * Open the models .uml file in the UML model editor by:
    * right click on the file
    * open with
    * UML model editor
  * If there is more than one Region and/or State Machine ensure they are uniquely named (change their name property)
  * Create a signal for each transition by:
    * right clicking at the package 
    * new child
    * packaged elements 
    * signal (press 's' to fast track to elements beginning with s)
      * note that even though each transition has to be unique, you don't need a unique signal for each transition. Signals can be re-used. 
      * That is, sending signal X to state A might trigger transition 1, whereas sending signal X to state B might trigger transition 2.
    * Right-click on the signal and select 'Show Properties View'. In the Properties view, specify a unique name for each signal with a suffix 'Signal' as the name of the receive signal event is what shows up in GRAF's GUI
    * at this stage the UML Tree should look like this:
       http://graf-framework.googlecode.com/files/AfterSignalAdded.png
  * Create a receive signal event for each signal by:
    * right clicking at the package 
    * new child 
    * packaged elements 
    * receive signal event (press 'r' to fast track to elements beginning with r)
    * specify the related signal (one of those created before) and a unique name for each receive signal event
       http://graf-framework.googlecode.com/files/LinkingSignalAndRecSignal.png
  * Add a trigger for each transition by:
    * right click on the relevant transition
    * new child
    * trigger
    * trigger 
    * specify an event (choose a receive signal event) and a unique name for the trigger
      * an easy way to name triggers is to add the suffix 'Trig' to the transition name. This will ensure uniqueness provided previous steps were followed correctly
     http://graf-framework.googlecode.com/files/LinkingTransitionToSignal.png

==== Example ====

The completed model based on Shayne Flints lecture notes like this in Eclipses UML Model Editor:

http://graf-framework.googlecode.com/files/TriggerAddedUMLTree.png