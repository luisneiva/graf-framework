#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.2 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// model.graphTransformer.EdgeVariableAssignment
	c1293 [label=<<table title="model.graphTransformer.EdgeVariableAssignment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EdgeVariableAssignment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EdgeVariableAssignment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ruleEdge : Edge </td></tr>
<tr><td align="left" balign="left"> + inputEdge : Edge </td></tr>
<tr><td align="left" balign="left"> + originalVariable : String </td></tr>
<tr><td align="left" balign="left"> ~ constantToUpdate : String </td></tr>
<tr><td align="left" balign="left"> - needsUpdate : Boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getNeedsUpdate() : Boolean </td></tr>
<tr><td align="left" balign="left"> + update(before : Graph, input : Graph) </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.graphTransformer.NodeVariableAssignment
	c1295 [label=<<table title="model.graphTransformer.NodeVariableAssignment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NodeVariableAssignment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NodeVariableAssignment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ruleNode : Node </td></tr>
<tr><td align="left" balign="left"> + inputNode : Node </td></tr>
<tr><td align="left" balign="left"> + originalVariable : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + verifyEdges(input : Graph, before : Graph) : Boolean </td></tr>
<tr><td align="left" balign="left"> - checkSize(ruleEdge : Edge, inputEdge : Edge, checkToNotFrom : Boolean) : Boolean </td></tr>
<tr><td align="left" balign="left"> + equals(o : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// model.graphTransformer.VariableAssignment
	c1298 [label=<<table title="model.graphTransformer.VariableAssignment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./VariableAssignment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="ariali"> VariableAssignment </font></td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	//model.graphTransformer.EdgeVariableAssignment extends model.graphTransformer.VariableAssignment
	c1298:p -> c1293:p [dir=back,arrowtail=empty];
	//model.graphTransformer.NodeVariableAssignment extends model.graphTransformer.VariableAssignment
	c1298:p -> c1295:p [dir=back,arrowtail=empty];
	//model.graphTransformer.NodeVariableAssignment extends model.graphTransformer.VariableAssignment
	c1298:p -> c1295:p [dir=back,arrowtail=empty];
	//model.graphTransformer.EdgeVariableAssignment extends model.graphTransformer.VariableAssignment
	c1298:p -> c1293:p [dir=back,arrowtail=empty];
}

